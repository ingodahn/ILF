proved.
used_formula([1], [], -even(A)| -even(B)|even(A+B)).
used_formula([2], [], -odd(A)| -odd(B)|even(A+B)).
used_formula([3], [], -even(a+a)).
used_formula([4], [factor,[1,1,2]], -even(A)|even(A+A)).
used_formula([5], [factor,[2,1,2]], -odd(A)|even(A+A)).
used_formula([6], [], even(A)|odd(A)).
used_formula([7], [hyper,5,[6,2]], even(A)|even(A+A)).
used_formula([9], [hyper,4,[7,1],factor_simp], even(A+A)).
used_formula([10], [binary,[9,1],[3,1]], $F).
proof_object(1,[input],[[not,[even,v0]],[not,[even,v1]],[even,[+,v0,v1]]]).
proof_object(2,[input],[[not,[odd,v0]],[not,[odd,v1]],[even,[+,v0,v1]]]).
proof_object(3,[input],[[not,[even,[+,[a],[a]]]]]).
proof_object(4,[instantiate,1,[[v0,.,v1]]],[[not,[even,v1]],[not,[even,v1]],[even,[+,v1,v1]]]).
proof_object(5,[merge,4,[2]],[[not,[even,v1]],[even,[+,v1,v1]]]).
proof_object(6,[instantiate,5,[[v1,.,v0]]],[[not,[even,v0]],[even,[+,v0,v0]]]).
proof_object(7,[instantiate,2,[[v0,.,v1]]],[[not,[odd,v1]],[not,[odd,v1]],[even,[+,v1,v1]]]).
proof_object(8,[merge,7,[2]],[[not,[odd,v1]],[even,[+,v1,v1]]]).
proof_object(9,[instantiate,8,[[v1,.,v0]]],[[not,[odd,v0]],[even,[+,v0,v0]]]).
proof_object(10,[input],[[even,v0],[odd,v0]]).
proof_object(11,[instantiate,9,[[v0,.,v64]]],[[not,[odd,v64]],[even,[+,v64,v64]]]).
fileende.
